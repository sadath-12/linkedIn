import { signOut, getSession, useSession } from 'next-auth/react';
import Head from 'next/head';
import Image from 'next/image';
import { useRouter } from 'next/router';
import Header from '../components/Header';
import Sidebar from '../components/Sidebar';
import Feed from '../components/Feed';
import { AnimatePresence } from 'framer-motion';
import Modal from '../components/Modal';
import { useRecoilState } from 'recoil';
import { modalState, modalTypeState } from '../atoms/modalAtom';
import { useEffect } from 'react';
import { connectToDatabase } from '../utils/mongodb';
import Widgets from '../components/Widgets';

export default function Home({posts,news}) {
  
  console.log(news)
  const [modalOpen, setModalOpen] = useRecoilState(modalState);
  const [modalType, setModalType] = useRecoilState(modalTypeState);

  const router = useRouter();

  const { status } = useSession({
    required: true,
    onUnauthenticated() {
      router.push('/home');
    },
  });
 

  return (
    <div className="bg-[#F3F2EF] dark:bg-black dark:text-white h-screen overflow-y-scroll md:space-y-6">
      <Head>
        <title>Feed | LinkedIn</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <main className="flex justify-center gap-x-5 px-4 sm:px-12">
        <div className="flex flex-col md:flex-row gap-x-5 gap-5">
          {/* sidebar  */}
          <Sidebar />
          {/* feed  */}
          <Feed posts={posts} />
        </div>
        <Widgets articles={news} />
        <div>

          <AnimatePresence>
            {modalOpen && (
              <Modal handleClose={() => setModalOpen(false)} type={modalType} />
            )}
          </AnimatePresence>
        </div>
      </main>
    </div>
  );
}

export async function getServerSideProps(){
  const {db}=await connectToDatabase()
  const posts= await db.collection("posts").find().sort({timestamp:-1}).toArray()

  //get news

  const news = await (await fetch(`https://newsapi.org/v2/top-headlines?country=in&apiKey=${process.env.NEXT_API_KEY}&pageSize=5`)).json()


  return {
    props:{
      posts:JSON.parse(JSON.stringify(posts)),
      news:news.articles
    }
  }
}